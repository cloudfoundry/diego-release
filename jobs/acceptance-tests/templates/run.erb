#!/bin/bash -l

set -e -x

export GOROOT=$(readlink -nf /var/vcap/packages/golang_1.4)
export PATH=${GOROOT}/bin:${PATH}

export PATH=/var/vcap/packages/cf-cli/bin:${PATH} # put the cli on the path

export GOPATH=/var/vcap/packages/acceptance-tests
export PATH=${GOPATH}/bin:${PATH}

export GOPATH=${PWD}/Godeps/_workspace:${GOPATH}
export PATH=${PWD}/Godeps/_workspace/bin:${PATH}

export CF_COLOR=false
export CONFIG=/var/vcap/jobs/acceptance-tests/bin/config.json

mkdir -p /var/vcap/sys/log/acceptance_tests
cd /var/vcap/packages/acceptance-tests/src/github.com/cloudfoundry-incubator/diego-acceptance-tests

EXITSTATUS=0
packagesToSkip=""
packagesToSkip+=<%= p("acceptance_tests.run_security_groups_tests") ? "" : "security_groups," %>
packagesToSkip+=<%= p("acceptance_tests.run_ssh_tests") ? "" : "ssh," %>
packagesToSkip+=<%= p("acceptance_tests.skip_dea_compatibility? "" : "dea," %>
[[ $packagesToSkip == *, ]] && packagesToSkip=${packagesToSkip%?}

skips=<%= p("acceptance_tests.skip_regex") ? %Q[-skip="#{p("acceptance_tests.skip_regex")}"] : "" %>

tags=""
tags+=<%= p("acceptance_tests.skip_internet_tests") ? "noInternet," : "" %>
tags+=<%= p("acceptance_tests.skip_docker_tests") ? "noDocker," : "" %>
tags=${tags//,/ }

failfast=<%= p("acceptance_tests.failfast") ? "-failFast" : "" %>

nodes=<%= properties.acceptance_tests.nodes %>
verbose=<%= properties.acceptance_tests.verbose ? "-v" : "" %>
bin/test -randomizeAllSpecs $failfast $verbose -skipPackage=$packagesToSkip $skips -tags="${tags}" -nodes=$nodes -keepGoing || EXITSTATUS=$?

echo "Acceptance Tests Complete; exit status: $EXITSTATUS"

rm -rf ${CF_PLUGIN_HOME}

for i in /var/vcap/sys/log/acceptance_tests/*.txt; do
  if [ -e "$i" ]; then
    mv $i $i.log #Â needed to make download-logs work
  fi
done

exit $EXITSTATUS
