#!/bin/bash -e

conf_dir=/var/vcap/jobs/rep/config
shared_data_dir=/var/vcap/data/rep/shared_data

# Remove old data dirs so that disk space isn't wasted. This cleanup can be removed in v4
old_data_dir=/var/vcap/data/rep
old_instance_identity_dir=${old_data_dir}/instance_identity
if mount | grep -q $old_instance_identity_dir; then
  umount -f $old_instance_identity_dir
fi
rm -rf "${old_instance_identity_dir}"
rm -rf "${old_data_dir}/trusted_certs"
rm -rf "${old_data_dir}/download_cache"
rm -rf "${old_data_dir}/proxy_config"

# Key and Cert are generally ~2048 bytes. Add an extra 2048 for extra space
# add another 4096 to account for the temp files used to do atomic replacement #141163257
instance_cert_and_key_size=10240
instance_ca_size=$(wc -c ${conf_dir}/certs/rep/instance_identity.crt | cut -d' ' -f1)
max_containers=250
instance_tmpfs_size=$((($instance_ca_size + $instance_cert_and_key_size) * $max_containers))

mkdir -p /var/vcap/data/rep/shared_data
flock /var/vcap/sys/run/garden/mount.lock /bin/bash -c 'if ! grep -q " /var/vcap/data/rep/shared_data " /proc/self/mountinfo; then mount --bind /var/vcap/data/rep/shared_data /var/vcap/data/rep/shared_data; fi'
mount --make-shared /var/vcap/data/rep/shared_data

instance_identity_dir=${shared_data_dir}/instance_identity
if mount | grep -q $instance_identity_dir; then
  umount -f $instance_identity_dir
fi
mkdir -p "$instance_identity_dir"
mount -t tmpfs -o size=$instance_tmpfs_size tmpfs $instance_identity_dir
chown -R vcap:vcap "$instance_identity_dir"
chmod 0700 "$instance_identity_dir"

cache_dir=${shared_data_dir}/download_cache
mkdir -p "$cache_dir"
chown -R vcap:vcap $cache_dir

trusted_certs_dir=${shared_data_dir}/trusted_certs
rm -rf "$trusted_certs_dir"
<% if_p("containers.trusted_ca_certificates") do %>
  mkdir -p "$trusted_certs_dir"
  chown -R vcap:vcap $trusted_certs_dir

  /var/vcap/packages/certsplitter/bin/certsplitter $conf_dir/certs/rep/trusted_ca_certificates.json $trusted_certs_dir

  chmod +r ${trusted_certs_dir}/*
<% end %>

proxy_config_dir=${shared_data_dir}/proxy_config
rm -rf "$proxy_config_dir"
<% if p("containers.proxy.enabled") %>
  mkdir -p "$proxy_config_dir"
  chown -R vcap:vcap "$proxy_config_dir"
  chmod 0700 "$proxy_config_dir"
<% end %>
