name: (( config_from_cf.cf_deployment_name "-diego" ))

releases: (( base_releases bbs_overrides.releases volman_overrides.releases [garden_overrides.release] [config_from_cf.cf_release] bridge_overrides.releases ))

director_uuid: (( config_from_cf.cf_director_uuid ))

compilation:
  workers: (( iaas_settings.compilation_workers || 6 ))
  network: diego1
  reuse_compilation_vms: true
  cloud_properties: (( iaas_settings.compilation_cloud_properties ))

update:
  canaries: 1
  canary_watch_time: 5000-120000
  update_watch_time: 5000-120000
  max_in_flight: 1
  serial: false

networks:
  - name: diego1
    type: manual
    subnets: (( iaas_settings.subnet_configs.diego1.subnets ))
  - name: diego2
    type: manual
    subnets: (( iaas_settings.subnet_configs.diego2.subnets || [] ))
  - name: diego3
    type: manual
    subnets: (( iaas_settings.subnet_configs.diego3.subnets || [] ))

disk_pools:
  - name: database_disks
    disk_size: (( iaas_settings.disk_pools.database_disks.disk_size || 1024 ))
    cloud_properties: (( iaas_settings.disk_pools.database_disks.cloud_properties || empty_hash ))

resource_pools:
  - name: access_z1
    network: diego1
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.access_z1.cloud_properties ))
  - name: access_z2
    network: diego2
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.access_z2.cloud_properties || empty_hash ))
  - name: access_z3
    network: diego3
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.access_z3.cloud_properties || empty_hash ))
  - name: brain_z1
    network: diego1
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.brain_z1.cloud_properties ))
  - name: brain_z2
    network: diego2
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.brain_z2.cloud_properties || empty_hash ))
  - name: brain_z3
    network: diego3
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.brain_z3.cloud_properties || empty_hash ))
  - name: cc_bridge_z1
    network: diego1
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.cc_bridge_z1.cloud_properties ))
  - name: cc_bridge_z2
    network: diego2
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.cc_bridge_z2.cloud_properties || empty_hash ))
  - name: cc_bridge_z3
    network: diego3
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.cc_bridge_z3.cloud_properties || empty_hash ))
  - name: cell_z1
    network: diego1
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.cell_z1.cloud_properties ))
  - name: cell_z2
    network: diego2
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.cell_z2.cloud_properties || empty_hash ))
  - name: cell_z3
    network: diego3
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.cell_z3.cloud_properties || empty_hash ))
  - name: database_z1
    network: diego1
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.database_z1.cloud_properties ))
  - name: database_z2
    network: diego2
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.database_z2.cloud_properties || empty_hash ))
  - name: database_z3
    network: diego3
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.database_z3.cloud_properties || empty_hash ))
  - name: route_emitter_z1
    network: diego1
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.route_emitter_z1.cloud_properties ))
  - name: route_emitter_z2
    network: diego2
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.route_emitter_z2.cloud_properties || empty_hash ))
  - name: route_emitter_z3
    network: diego3
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.route_emitter_z3.cloud_properties || empty_hash ))
  - name: colocated_z1
    network: diego1
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.colocated_z1.cloud_properties ))
  - name: colocated_z2
    network: diego2
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.colocated_z2.cloud_properties || empty_hash ))
  - name: colocated_z3
    network: diego3
    stemcell: (( iaas_settings.stemcell ))
    cloud_properties: (( iaas_settings.resource_pool_cloud_properties.colocated_z3.cloud_properties || empty_hash ))

jobs:
  - name: database_z1
    templates: (( bbs_overrides.job_templates ))
    instances: (( instance_count_overrides.database_z1.instances || 1 ))
    persistent_disk_pool: database_disks
    resource_pool: database_z1
    networks:
      - name: diego1
    update:
      serial: true
      max_in_flight: 1
    properties:
      consul: (( bbs_overrides.job_properties.consul ))
      metron_agent:
        zone: z1

  - name: database_z2
    templates: (( bbs_overrides.job_templates ))
    instances: (( instance_count_overrides.database_z2.instances || 1 ))
    persistent_disk_pool: database_disks
    resource_pool: database_z2
    networks:
      - name: diego2
    update:
      serial: true
      max_in_flight: 1
    properties:
      consul: (( bbs_overrides.job_properties.consul ))
      metron_agent:
        zone: z2

  - name: database_z3
    templates: (( bbs_overrides.job_templates ))
    instances: (( instance_count_overrides.database_z3.instances || 1 ))
    persistent_disk_pool: database_disks
    resource_pool: database_z3
    networks:
      - name: diego3
    update:
      serial: true
      max_in_flight: 1
    properties:
      consul: (( bbs_overrides.job_properties.consul ))
      metron_agent:
        zone: z3

  - name: brain_z1
    templates: (( base_job_templates.brain ))
    instances: (( instance_count_overrides.brain_z1.instances || 1 ))
    resource_pool: brain_z1
    networks:
      - name: diego1
    update:
      serial: true
      max_in_flight: 1
    properties:
      metron_agent:
        zone: z1

  - name: cell_z1
    templates: (( base_job_templates.cell volman_overrides.driver_templates ))
    instances: (( instance_count_overrides.cell_z1.instances || 1 ))
    resource_pool: cell_z1
    networks:
      - name: diego1
    update:
      serial: false
      max_in_flight: (( instance_count_overrides.cell_z1.max_in_flight || 1 ))
    properties:
      metron_agent:
        zone: z1
      diego:
        rep:
          use_azure_fault_domains: (( property_overrides.cell_z1.use_azure_fault_domains || nil ))
          zone: (( property_overrides.cell_z1.zone || "z1" ))

  - name: cc_bridge_z1
    templates: (( base_job_templates.cc_bridge ))
    instances: (( instance_count_overrides.cc_bridge_z1.instances || 1 ))
    resource_pool: cc_bridge_z1
    networks:
      - name: diego1
    update:
      serial: false
      max_in_flight: (( instance_count_overrides.cc_bridge_z1.max_in_flight || 1 ))
    properties:
      metron_agent:
        zone: z1

  - name: route_emitter_z1
    templates: (( base_job_templates.route_emitter ))
    instances: (( instance_count_overrides.route_emitter_z1.instances || 1 ))
    resource_pool: route_emitter_z1
    networks:
      - name: diego1
    update:
      serial: false
      max_in_flight: (( instance_count_overrides.route_emitter_z1.max_in_flight || 1 ))
    properties:
      metron_agent:
        zone: z1

  - name: access_z1
    templates: (( base_job_templates.access ))
    instances: (( instance_count_overrides.access_z1.instances || 1 ))
    resource_pool: access_z1
    networks:
      - name: diego1
    update:
      serial: false
      max_in_flight: (( instance_count_overrides.access_z1.max_in_flight || 1 ))
    properties:
      metron_agent:
        zone: z1

  - name: brain_z2
    templates: (( base_job_templates.brain ))
    instances: (( instance_count_overrides.brain_z2.instances || 1 ))
    resource_pool: brain_z2
    networks:
      - name: diego2
    update:
      serial: true
      max_in_flight: 1
    properties:
      metron_agent:
        zone: z2

  - name: cell_z2
    templates: (( base_job_templates.cell volman_overrides.driver_templates ))
    instances: (( instance_count_overrides.cell_z2.instances || 1 ))
    resource_pool: cell_z2
    networks:
      - name: diego2
    update:
      serial: false
      max_in_flight: (( instance_count_overrides.cell_z2.max_in_flight || 1 ))
    properties:
      metron_agent:
        zone: z2
      diego:
        rep:
          use_azure_fault_domains: (( property_overrides.cell_z2.use_azure_fault_domains || nil ))
          zone: (( property_overrides.cell_z2.zone || "z2" ))

  - name: cc_bridge_z2
    templates: (( base_job_templates.cc_bridge ))
    instances: (( instance_count_overrides.cc_bridge_z2.instances || 1 ))
    resource_pool: cc_bridge_z2
    networks:
      - name: diego2
    update:
      serial: false
      max_in_flight: (( instance_count_overrides.cc_bridge_z2.max_in_flight || 1 ))
    properties:
      metron_agent:
        zone: z2

  - name: route_emitter_z2
    templates: (( base_job_templates.route_emitter ))
    instances: (( instance_count_overrides.route_emitter_z2.instances || 1 ))
    resource_pool: route_emitter_z2
    networks:
      - name: diego2
    update:
      serial: false
      max_in_flight: (( instance_count_overrides.route_emitter_z2.max_in_flight || 1 ))
    properties:
      metron_agent:
        zone: z2

  - name: access_z2
    templates: (( base_job_templates.access ))
    instances: (( instance_count_overrides.access_z2.instances || 1 ))
    resource_pool: access_z2
    networks:
      - name: diego2
    update:
      serial: false
      max_in_flight: (( instance_count_overrides.access_z2.max_in_flight || 1))
    properties:
      metron_agent:
        zone: z2

  - name: brain_z3
    templates: (( base_job_templates.brain ))
    instances: (( instance_count_overrides.brain_z3.instances || 0 ))
    resource_pool: brain_z3
    networks:
      - name: diego3
    update:
      serial: true
      max_in_flight: 1
    properties:
      metron_agent:
        zone: z3

  - name: cell_z3
    templates: (( base_job_templates.cell volman_overrides.driver_templates ))
    instances: (( instance_count_overrides.cell_z3.instances || 0 ))
    resource_pool: cell_z3
    networks:
      - name: diego3
    update:
      serial: false
      max_in_flight: (( instance_count_overrides.cell_z3.max_in_flight || 1 ))
    properties:
      metron_agent:
        zone: z3
      diego:
        rep:
          use_azure_fault_domains: (( property_overrides.cell_z3.use_azure_fault_domains || nil ))
          zone: (( property_overrides.cell_z3.zone || "z3" ))

  - name: cc_bridge_z3
    templates: (( base_job_templates.cc_bridge ))
    instances: (( instance_count_overrides.cc_bridge_z3.instances || 0 ))
    resource_pool: cc_bridge_z3
    networks:
      - name: diego3
    update:
      serial: false
      max_in_flight: (( instance_count_overrides.cc_bridge_z3.max_in_flight || 1 ))
    properties:
      metron_agent:
        zone: z3

  - name: route_emitter_z3
    templates: (( base_job_templates.route_emitter ))
    instances: (( instance_count_overrides.route_emitter_z3.instances || 0 ))
    resource_pool: route_emitter_z3
    networks:
      - name: diego3
    update:
      serial: false
      max_in_flight: (( instance_count_overrides.route_emitter_z3.max_in_flight || 1 ))
    properties:
      metron_agent:
        zone: z3

  - name: access_z3
    templates: (( base_job_templates.access ))
    instances: (( instance_count_overrides.access_z3.instances || 0 ))
    resource_pool: access_z3
    networks:
      - name: diego3
    update:
      serial: false
      max_in_flight: (( instance_count_overrides.access_z3.max_in_flight || 1))
    properties:
      metron_agent:
        zone: z3

  - name: colocated_z1
    templates: (( base_job_templates.colocated bbs_overrides.job_templates ))
    instances: (( instance_count_overrides.colocated_z1.instances || 0 ))
    persistent_disk_pool: database_disks
    resource_pool: colocated_z1
    networks:
      - name: diego1
    update:
      serial: true
      max_in_flight: 1
    properties:
      consul: (( bbs_overrides.job_properties.consul ))
      diego:
        rep:
          zone: z1
      metron_agent:
        zone: z1

  - name: colocated_z2
    templates: (( base_job_templates.colocated bbs_overrides.job_templates ))
    instances: (( instance_count_overrides.colocated_z2.instances || 0 ))
    persistent_disk_pool: database_disks
    resource_pool: colocated_z2
    networks:
      - name: diego2
    update:
      serial: true
      max_in_flight: 1
    properties:
      consul: (( bbs_overrides.job_properties.consul ))
      diego:
        rep:
          zone: z2
      metron_agent:
        zone: z2

  - name: colocated_z3
    templates: (( base_job_templates.colocated bbs_overrides.job_templates ))
    instances: (( instance_count_overrides.colocated_z3.instances || 0 ))
    persistent_disk_pool: database_disks
    resource_pool: colocated_z3
    networks:
      - name: diego3
    update:
      serial: true
      max_in_flight: 1
    properties:
      consul: (( bbs_overrides.job_properties.consul ))
      diego:
        rep:
          zone: z3
      metron_agent:
        zone: z3

properties:
  # -- Properties below are used by the metron_agent job from cf-release --
  metron_agent:
    deployment: (( name ))
    protocols: (( config_from_cf.metron_agent.protocols ))
    preferred_protocol: (( config_from_cf.metron_agent.preferred_protocol ))
    enable_buffer: (( config_from_cf.metron_agent.enable_buffer ))
    buffer_size: (( config_from_cf.metron_agent.buffer_size ))
    tls:
      client_cert: (( config_from_cf.metron_agent.tls.client_cert ))
      client_key: (( config_from_cf.metron_agent.tls.client_key ))
    etcd:
      client_cert: (( config_from_cf.metron_agent.etcd.client_cert ))
      client_key: (( config_from_cf.metron_agent.etcd.client_key ))
    dropsonde_incoming_port: (( config_from_cf.metron_agent.dropsonde_incoming_port ))
  loggregator:
    etcd:
      require_ssl: (( config_from_cf.loggregator.etcd_require_ssl ))
      ca_cert: (( config_from_cf.loggregator.etcd_ca_cert ))
      machines: (( config_from_cf.loggregator.etcd_machines ))
    dropsonde_incoming_port: (( config_from_cf.loggregator.dropsonde_incoming_port ))
    tls:
      ca_cert: (( config_from_cf.loggregator.tls.ca_cert ))
  metron_endpoint:
    shared_secret: (( config_from_cf.metron_endpoint.shared_secret ))
  syslog_daemon_config: (( config_from_cf.syslog_daemon_config ))

  # -- Properties below are used by the consul_agent job from cf-release --
  consul:
    agent:
      datacenter: (( config_from_cf.consul.datacenter ))
      domain: (( config_from_cf.consul.domain ))
      log_level: (( config_from_cf.consul.log_level ))
      servers:
        lan: (( config_from_cf.consul.lan_servers ))
    ca_cert: (( config_from_cf.consul.ca_cert ))
    agent_cert: (( config_from_cf.consul.agent_cert ))
    agent_key: (( config_from_cf.consul.agent_key ))
    encrypt_keys: (( config_from_cf.consul.encrypt_keys ))
    server_cert: (( config_from_cf.consul.server_cert ))
    server_key: (( config_from_cf.consul.server_key ))

  # -- Properties below are used by the etcd from etcd-release --
  etcd: (( bbs_overrides.etcd_properties ))

  cflinuxfs2-rootfs:
    trusted_certs: (( property_overrides.rootfs_cflinuxfs2.trusted_certs || nil ))

  # -- Properties below are used by the jobs from diego-release --
  diego:
    # -- Global property --
    ssl:
      skip_cert_verify: (( property_overrides.skip_cert_verify || nil ))

    # -- Job-specific properties --
    auctioneer:
      bbs:
        api_location: (( property_overrides.bbs.api_location || nil ))
        ca_cert: (( property_overrides.bbs.ca_cert ))
        client_cert: (( property_overrides.bbs.client_cert ))
        client_key: (( property_overrides.bbs.client_key ))
        require_ssl: (( property_overrides.bbs.require_ssl || nil ))
        client_session_cache_size: (( property_overrides.bbs.client_session_cache_size || nil ))
        max_idle_conns_per_host: (( property_overrides.bbs.max_idle_conns_per_host || nil ))
      cell_state_timeout: (( property_overrides.auctioneer.cell_state_timeout || nil ))
      starting_container_weight: (( property_overrides.auctioneer.starting_container_weight || nil ))
      dropsonde_port: (( config_from_cf.metron_agent.dropsonde_incoming_port ))
      log_level: (( property_overrides.auctioneer.log_level || nil ))
    cfdot:
      bbs:
        use_ssl: (( property_overrides.bbs.require_ssl || nil ))
        ca_cert: (( property_overrides.bbs.ca_cert ))
        client_cert: (( property_overrides.bbs.client_cert ))
        client_key: (( property_overrides.bbs.client_key ))
    bbs:
      active_key_label: (( property_overrides.bbs.active_key_label || nil ))
      encryption_keys: (( property_overrides.bbs.encryption_keys || nil ))
      require_ssl: (( property_overrides.bbs.require_ssl || nil ))
      ca_cert: (( property_overrides.bbs.ca_cert ))
      server_cert: (( property_overrides.bbs.server_cert ))
      server_key: (( property_overrides.bbs.server_key ))
      dropsonde_port: (( config_from_cf.metron_agent.dropsonde_incoming_port ))
      auctioneer:
        api_url: (( property_overrides.bbs.auctioneer.api_url || nil ))
      etcd: (( bbs_overrides.bbs_properties.etcd ))
      sql:
        db_connection_string: (( sql_overrides.bbs.db_connection_string || nil ))
        db_driver: (( sql_overrides.bbs.db_driver || nil ))
        max_open_connections: (( sql_overrides.bbs.max_open_connections || nil ))
        require_ssl: (( sql_overrides.bbs.require_ssl || nil ))
        ca_cert: (( sql_overrides.bbs.ca_cert || nil ))
      log_level: (( property_overrides.bbs.log_level || nil ))
      convergence:
        repeat_interval_in_seconds: (( property_overrides.bbs.convergence.repeat_interval_in_seconds || nil ))
        kick_task_duration_in_seconds: (( property_overrides.bbs.convergence.kick_task_duration_in_seconds || nil ))
        expire_completed_task_duration_in_seconds: (( property_overrides.bbs.convergence.expire_completed_task_duration_in_seconds || nil ))
        expire_pending_task_duration_in_seconds: (( property_overrides.bbs.convergence.expire_pending_task_duration_in_seconds || nil ))
    executor:
      disk_capacity_mb: (( property_overrides.executor.disk_capacity_mb || nil ))
      max_cache_size_in_bytes: (( property_overrides.executor.max_cache_size_in_bytes || nil ))
      memory_capacity_mb: (( property_overrides.executor.memory_capacity_mb || nil ))
      drain_timeout_in_seconds: (( property_overrides.executor.drain_timeout_in_seconds || nil ))
      post_setup_hook: (( property_overrides.executor.post_setup_hook || nil ))
      post_setup_user: (( property_overrides.executor.post_setup_user || nil ))
      garden:
        network: (( property_overrides.executor.garden.network || nil ))
        address: (( property_overrides.executor.garden.address || nil ))
      garden_healthcheck:
        interval: (( property_overrides.executor.garden_healthcheck.interval || nil ))
        timeout: (( property_overrides.executor.garden_healthcheck.timeout || nil ))
        command_retry_pause: (( property_overrides.executor.garden_healthcheck.command_retry_pause || nil ))
        process:
          path: (( property_overrides.executor.garden_healthcheck.process.path || nil ))
          user: (( property_overrides.executor.garden_healthcheck.process.user || nil ))
          dir: (( property_overrides.executor.garden_healthcheck.process.dir || nil ))
          args: (( property_overrides.executor.garden_healthcheck.process.args || nil ))
          env: (( property_overrides.executor.garden_healthcheck.process.env || nil ))
      ca_certs_for_downloads: (( property_overrides.executor.ca_certs_for_downloads || nil ))
      log_level: (( property_overrides.executor.log_level || nil ))
      container_metrics_report_interval: (( property_overrides.executor.container_metrics_report_interval || nil ))
    file_server:
      dropsonde_port: (( config_from_cf.metron_agent.dropsonde_incoming_port ))
      log_level: (( property_overrides.file_server.log_level || nil ))
    rep:
      preloaded_rootfses: (( property_overrides.diego.rep.preloaded_rootfses || ["cflinuxfs2:/var/vcap/packages/cflinuxfs2/rootfs"] ))
      dropsonde_port: (( config_from_cf.metron_agent.dropsonde_incoming_port ))
      bbs:
        api_location: (( property_overrides.bbs.api_location || nil ))
        ca_cert: (( property_overrides.bbs.ca_cert ))
        client_cert: (( property_overrides.bbs.client_cert ))
        client_key: (( property_overrides.bbs.client_key ))
        require_ssl: (( property_overrides.bbs.require_ssl || nil ))
        client_session_cache_size: (( property_overrides.bbs.client_session_cache_size || nil ))
        max_idle_conns_per_host: (( property_overrides.bbs.max_idle_conns_per_host || nil ))
      evacuation_timeout_in_seconds: (( property_overrides.rep.evacuation_timeout_in_seconds || nil ))
      trusted_certs: (( property_overrides.rep.trusted_certs || nil ))
      log_level: (( property_overrides.rep.log_level || nil ))
    route_emitter:
      dropsonde_port: (( config_from_cf.metron_agent.dropsonde_incoming_port ))
      bbs:
        api_location: (( property_overrides.bbs.api_location || nil ))
        ca_cert: (( property_overrides.bbs.ca_cert ))
        client_cert: (( property_overrides.bbs.client_cert ))
        client_key: (( property_overrides.bbs.client_key ))
        require_ssl: (( property_overrides.bbs.require_ssl || nil ))
        client_session_cache_size: (( property_overrides.bbs.client_session_cache_size || nil ))
        max_idle_conns_per_host: (( property_overrides.bbs.max_idle_conns_per_host || nil ))
      nats:
        machines: (( config_from_cf.nats.machines ))
        user: (( config_from_cf.nats.user ))
        password: (( config_from_cf.nats.password ))
        port: (( config_from_cf.nats.port ))
      log_level: (( property_overrides.route_emitter.log_level || nil ))
    ssh_proxy:
      dropsonde_port: (( config_from_cf.metron_agent.dropsonde_incoming_port ))
      bbs:
        api_location: (( property_overrides.bbs.api_location || nil ))
        ca_cert: (( property_overrides.bbs.ca_cert ))
        client_cert: (( property_overrides.bbs.client_cert ))
        client_key: (( property_overrides.bbs.client_key ))
        require_ssl: (( property_overrides.bbs.require_ssl || nil ))
        client_session_cache_size: (( property_overrides.bbs.client_session_cache_size || nil ))
        max_idle_conns_per_host: (( property_overrides.bbs.max_idle_conns_per_host || nil ))
      host_key: (( property_overrides.ssh_proxy.host_key || "" ))
      enable_cf_auth: (( property_overrides.ssh_proxy.enable_cf_auth || false ))
      enable_diego_auth: (( property_overrides.ssh_proxy.enable_diego_auth || false ))
      uaa_secret: (( config_from_cf.uaa.ssh_proxy_client_secret ))
      uaa_token_url: (( config_from_cf.uaa.token_url ))
      diego_credentials: (( property_overrides.ssh_proxy.diego_credentials || nil ))

  # -- Proerties below are used by jobs from the capi-release --
  capi:
    cc_uploader:
      dropsonde_port: (( config_from_cf.metron_agent.dropsonde_incoming_port ))
      log_level: (( property_overrides.cc_uploader.log_level || nil ))
    nsync:
      diego_privileged_containers: (( property_overrides.nsync.diego_privileged_containers || nil ))
      dropsonde_port: (( config_from_cf.metron_agent.dropsonde_incoming_port ))
      bbs:
        api_location: (( property_overrides.bbs.api_location || nil ))
        ca_cert: (( property_overrides.bbs.ca_cert ))
        client_cert: (( property_overrides.bbs.client_cert ))
        client_key: (( property_overrides.bbs.client_key ))
        require_ssl: (( property_overrides.bbs.require_ssl || nil ))
        client_session_cache_size: (( property_overrides.bbs.client_session_cache_size || nil ))
        max_idle_conns_per_host: (( property_overrides.bbs.max_idle_conns_per_host || nil ))
      cc:
        base_url: (( config_from_cf.cc.srv_api_uri ))
        basic_auth_username: (( config_from_cf.cc.internal_api_user ))
        basic_auth_password: (( config_from_cf.cc.internal_api_password ))
      log_level: (( property_overrides.nsync.log_level || nil ))
    stager:
      diego_privileged_containers: (( property_overrides.stager.diego_privileged_containers || nil ))
      dropsonde_port: (( config_from_cf.metron_agent.dropsonde_incoming_port ))
      cc:
        basic_auth_username: (( config_from_cf.cc.internal_api_user ))
        basic_auth_password: (( config_from_cf.cc.internal_api_password ))
      bbs:
        api_location: (( property_overrides.bbs.api_location || nil ))
        ca_cert: (( property_overrides.bbs.ca_cert ))
        client_cert: (( property_overrides.bbs.client_cert ))
        client_key: (( property_overrides.bbs.client_key ))
        require_ssl: (( property_overrides.bbs.require_ssl || nil ))
        client_session_cache_size: (( property_overrides.bbs.client_session_cache_size || nil ))
        max_idle_conns_per_host: (( property_overrides.bbs.max_idle_conns_per_host || nil ))
      log_level: (( property_overrides.stager.log_level || nil ))
      insecure_docker_registry_list: (( property_overrides.stager.insecure_docker_registry_list || nil ))
    tps:
      dropsonde_port: (( config_from_cf.metron_agent.dropsonde_incoming_port ))
      cc:
        basic_auth_username: (( config_from_cf.cc.internal_api_user ))
        basic_auth_password: (( config_from_cf.cc.internal_api_password ))
      bbs:
        api_location: (( property_overrides.bbs.api_location || nil ))
        ca_cert: (( property_overrides.bbs.ca_cert ))
        client_cert: (( property_overrides.bbs.client_cert ))
        client_key: (( property_overrides.bbs.client_key ))
        require_ssl: (( property_overrides.bbs.require_ssl || nil ))
        client_session_cache_size: (( property_overrides.bbs.client_session_cache_size || nil ))
        max_idle_conns_per_host: (( property_overrides.bbs.max_idle_conns_per_host || nil ))
      log_level: (( property_overrides.tps.log_level || nil ))
      traffic_controller_url: (( config_from_cf.loggregator.traffic_controller_url ))

  # -- Proerties below are used by jobs from garden-linux-release --
  garden:
    allow_host_access: (( property_overrides.garden.allow_host_access || nil ))
    allow_networks: (( property_overrides.garden.allow_networks || nil ))
    default_container_grace_time: (( property_overrides.garden.default_container_grace_time || 0 ))
    deny_networks: (( property_overrides.garden.deny_networks || ["0.0.0.0/0"] ))
    destroy_containers_on_start: (( property_overrides.garden.destroy_containers_on_start || true ))
    disk_quota_enabled: (( property_overrides.garden.disk_quota_enabled || nil ))
    dns_servers: (( property_overrides.garden.dns_servers || [] ))
    graph_cleanup_threshold_in_mb: (( property_overrides.garden.graph_cleanup_threshold_in_mb || 0 ))
    insecure_docker_registry_list: (( property_overrides.garden.insecure_docker_registry_list || nil ))
    listen_address: (( property_overrides.garden.listen_address || nil ))
    listen_network: (( property_overrides.garden.listen_network || nil ))
    log_level: (( property_overrides.garden.log_level || nil ))
    network_mtu: (( property_overrides.garden.mtu || nil ))
    persistent_image_list: (( property_overrides.garden.persistent_image_list || ["/var/vcap/packages/cflinuxfs2/rootfs"] ))


# The keys below should not be included in the final stub
config_from_cf: (( merge ))
iaas_settings: (( merge ))
instance_count_overrides: (( merge || nil ))
property_overrides: (( merge ))
sql_overrides: (( merge  || nil ))
bridge_overrides:
  job_release: cf
  releases: (( merge || [] ))

bbs_overrides:
  job_properties:
    consul: (( merge  || base_etcd_properties.consul ))
  job_templates: (( merge || base_job_templates.database ))
  etcd_properties: (( merge || base_etcd_properties.properties ))
  bbs_properties:
    etcd:
      machines: (( base_etcd_properties.properties.machines ))
      require_ssl: (( property_overrides.etcd.require_ssl || nil ))
      ca_cert: (( property_overrides.etcd.ca_cert ))
      client_cert: (( property_overrides.etcd.client_cert ))
      client_key: (( property_overrides.etcd.client_key ))
      client_session_cache_size: (( property_overrides.etcd.client_session_cache_size || nil ))
      max_idle_conns_per_host: (( property_overrides.etcd.max_idle_conns_per_host || nil ))
  releases: (( merge || base_etcd_properties.releases ))

base_etcd_properties:
  releases:
  - name: etcd
    version: (( release_versions.etcd || "latest" ))
  consul:
    agent:
      services:
        etcd: {}
  properties:
    machines: ["etcd.service.cf.internal"]
    advertise_urls_dns_suffix: "etcd.service.cf.internal"
    cluster:
      - name: "database_z1"
        instances: (( instance_count_overrides.database_z1.instances || 1 ))
      - name: "database_z2"
        instances: (( instance_count_overrides.database_z2.instances || 1 ))
      - name: "database_z3"
        instances: (( instance_count_overrides.database_z3.instances || 1 ))
      - name: "colocated_z1"
        instances: (( instance_count_overrides.colocated_z1.instances || 0 ))
      - name: "colocated_z2"
        instances: (( instance_count_overrides.colocated_z2.instances || 0 ))
      - name: "colocated_z2"
        instances: (( instance_count_overrides.colocated_z2.instances || 0 ))
    require_ssl: (( property_overrides.etcd.require_ssl || nil ))
    ca_cert: (( property_overrides.etcd.ca_cert || nil ))
    server_cert: (( property_overrides.etcd.server_cert || nil ))
    server_key: (( property_overrides.etcd.server_key || nil ))
    client_cert: (( property_overrides.etcd.client_cert || nil ))
    client_key: (( property_overrides.etcd.client_key || nil ))
    peer_require_ssl: (( property_overrides.etcd.peer_require_ssl || nil ))
    peer_ca_cert: (( property_overrides.etcd.peer_ca_cert || nil ))
    peer_cert: (( property_overrides.etcd.peer_cert || nil ))
    peer_key: (( property_overrides.etcd.peer_key || nil ))
    heartbeat_interval_in_milliseconds: (( property_overrides.etcd.heartbeat_interval_in_milliseconds || nil ))
    election_timeout_in_milliseconds: (( property_overrides.etcd.election_timeout_in_milliseconds || nil ))

garden_overrides:
  job_release: garden-linux
  release:
    name: garden-linux
    version: (( release_versions.garden-linux || release_versions.garden_linux || "latest" ))

empty_hash: {}

volman_overrides:
  releases: (( merge || [] ))
  driver_templates: (( merge || [] ))

base_releases:
  - name: diego
    version: (( release_versions.diego || "latest" ))
  - name: cflinuxfs2-rootfs
    version: (( release_versions.cflinuxfs2-rootfs || "latest" ))

release_versions: (( merge || nil ))

base_job_templates:
  access:
    - name: consul_agent
      release: cf
    - name: ssh_proxy
      release: diego
    - name: metron_agent
      release: cf
    - name: file_server
      release: diego
    - name: cfdot
      release: diego
  brain:
    - name: consul_agent
      release: cf
    - name: auctioneer
      release: diego
    - name: metron_agent
      release: cf
    - name: cfdot
      release: diego
  cc_bridge:
    - name: consul_agent
      release: cf
    - name: stager
      release: (( bridge_overrides.job_release || "cf" ))
    - name: nsync
      release: (( bridge_overrides.job_release || "cf" ))
    - name: tps
      release: (( bridge_overrides.job_release || "cf" ))
    - name: cc_uploader
      release: (( bridge_overrides.job_release || "cf" ))
    - name: metron_agent
      release: cf
  cell:
    - name: consul_agent
      release: cf
    - name: rep
      release: diego
    - name: garden
      release: (( garden_overrides.job_release || "garden-linux" ))
    - name: cflinuxfs2-rootfs-setup
      release: cflinuxfs2-rootfs
    - name: metron_agent
      release: cf
    - name: cfdot
      release: diego
  database:
    - name: consul_agent
      release: cf
    - name: etcd
      release: etcd
    - name: bbs
      release: diego
    - name: metron_agent
      release: cf
    - name: cfdot
      release: diego
  route_emitter:
    - name: consul_agent
      release: cf
    - name: route_emitter
      release: diego
    - name: metron_agent
      release: cf
    - name: cfdot
      release: diego
  colocated:
    - name: rep
      release: diego
    - name: auctioneer
      release: diego
    - name: cc_uploader
      release: cf
    - name: file_server
      release: diego
    - name: garden
      release: (( garden_overrides.job_release || "garden-linux" ))
    - name: nsync
      release: cf
    - name: cflinuxfs2-rootfs-setup
      release: cflinuxfs2-rootfs
    - name: route_emitter
      release: diego
    - name: ssh_proxy
      release: diego
    - name: stager
      release: cf
    - name: tps
      release: cf
