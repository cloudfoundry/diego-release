#!/bin/bash

function bootDB {
  db="$1"

  if [ "${db}" = "postgres" ]; then
    launchDB="(POSTGRES_PASSWORD=password /postgres-entrypoint.sh postgres -c max_connections=300 &> /var/log/postgres-boot.log) &"
    testConnection="PGPASSWORD=password psql -h localhost -U postgres -c '\conninfo'"
  elif [ "${db}" = "mysql-5.7" ] ; then
    # max_allowed_packet default for PXC Release is 256M
    # TODO: yeah.. this is exactly the same code.. so let's remove it?
    launchDB="(MYSQL_ROOT_PASSWORD=password /mysql-entrypoint.sh mysqld --max_allowed_packet=512M &> /var/log/mysql-boot.log) &"
    testConnection="mysql -h localhost -u root -D mysql -e '\s;' --password='password' --max_allowed_packet=512M"
  elif [ "${db}" = "mysql" ]  || [ "${db}" = "mysql8" ]; then
    # max_allowed_packet default for PXC Release is 256M
    launchDB="(MYSQL_ROOT_PASSWORD=password /mysql-entrypoint.sh mysqld --max_allowed_packet=512M &> /var/log/mysql-boot.log) &"
    testConnection="mysql -h localhost -u root -D mysql -e '\s;' --password='password' --max_allowed_packet=512M"
  else
    echo "skipping database"
    return 0
  fi

  echo -n "booting ${db}"
  eval "$launchDB"
  for _ in $(seq 1 60); do
    if eval "${testConnection}" &> /dev/null; then
      echo "connection established to ${db}"
      return 0
    fi
    echo -n "."
    sleep 1
  done
  eval "${testConnection}" || true
  echo "unable to connect to ${db}"
  exit 1
}
